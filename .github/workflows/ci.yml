---
name: CI
run-name: ${{ github.actor }} CI
on:
  push:
    paths-ignore:
      - 'README.md'
      - 'docs/**'
jobs:
  build-and-test:
    runs-on: ${{ matrix.sys.os }}
    timeout-minutes: 15
    strategy:
      matrix:
        sys:
          - { os: windows-latest, shell: bash }
          - { os: ubuntu-latest,  shell: bash }
          - { os: macos-latest,   shell: bash }
        configuration:
          - placeholder
      fail-fast: false

    defaults:
      run:
        shell: ${{ matrix.sys.shell }}
    env:
      OS: ${{ matrix.sys.os }}
      CTEST_OUTPUT_ON_FAILURE: 1
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      CPM_SOURCE_CACHE: ${{ github.workspace }}/.cache/CPM
      HOMEBREW_NO_AUTO_UPDATE: 1


    steps:
      - run: |
          echo "üéâ job triggered by ${{ github.event_name }} event."
          echo "üêß running on ${{ runner.os }} server branch ${{ github.ref }} repository  ${{ github.repository }}."
          echo "üí° cloning ${{ github.repository }} to ${{ runner.os }}"

      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 1

      - uses: actions/cache@v3
        with:
          path: "**/.cache/CPM"
          key: ${{ github.workflow }}-${{ runner.os }}-cpm-modules-${{ hashFiles('**/CMakeLists.txt', '**/*.cmake') }}

      - run: |
          echo "install cpp-fstring"
          python3 -m pip install --index-url https://test.pypi.org/simple/ --extra-index-url https://pypi.org/simple/ cpp-fstring
          python3 -m pip install pytest

      - name: set windows code page to support unicode (UTF-8)
        if: runner.os == 'Windows'
        run: chcp.com 65001

      - if: runner.os == 'Linux'
        run: sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-12 12 --slave /usr/bin/g++ g++ /usr/bin/g++-12 --slave /usr/bin/gcov gcov /usr/bin/gcov-12

          #- if: runner.os == 'Windows'
          #run: conda install -c conda-forge fmt
          #- if: runner.os == 'Windows'
          #run: vcpkg install fmt
          #- if: runner.os == 'macOS'
          #run: brew install fmt
          #- if: runner.os == 'Linux'
          #run: sudo apt install libfmt-dev

      - run: make release
      - run: make test
      - run: make debug

      - run: echo "üçè This job's status is ${{ job.status }}."
